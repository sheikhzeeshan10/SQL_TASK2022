<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/home/administrator/Documents/SQL_TASK/office/Exercise 1/office.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1856"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:mainEmployers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Employers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="95"/><column index="2" value="79"/><column index="3" value="96"/><column index="4" value="126"/><column index="5" value="93"/><column index="6" value="179"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Services" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="93"/><column index="2" value="63"/><column index="3" value="72"/><column index="4" value="61"/><column index="5" value="184"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Software_Requests" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="4" mode="1"/></sort><column_widths><column index="1" value="95"/><column index="2" value="121"/><column index="3" value="155"/><column index="4" value="152"/><column index="5" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="76"/><column index="2" value="30"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="test" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="93"/><column index="2" value="149"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/* Exercise 1 */


1.a:

CREATE TABLE Employers (
	Employer_ID INTEGER PRIMARY KEY AUTOINCREMENT, 
	Full_Name TEXT, 
	Joining_Date TEXT, 
	Current_Position TEXT, 
	Department TEXT, 
	Assigned_Project_Client TEXT );
	
	
	
	
###inserting data###
INSERT into Employers 
(Full_Name,Joining_Date, Current_Position, Department, Assigned_Project_Client) 
VALUES
(&quot;Noor&quot;, &quot;12-09-2020&quot;, &quot;Manager&quot;, &quot;Finance&quot;, &quot;A&quot;)



1.b:


CREATE TABLE Services (
	Software_ID TEXT PRIMARY KEY, 
	Name TEXT, 
	Category TEXT, 
	Size INT, 
	Number_Of_Installments INTEGER AUTOINCREMENT );
	
	
###inserting data###

INSERT INTO Services
(Software_ID, name, Category, Size, Number_Of_Installments) VALUES
(&quot;NRN20&quot;, &quot;NORTON&quot;, &quot;D&quot;, &quot;2045&quot;, &quot;1&quot;);

	
	
1.c:


CREATE TABLE Software_Requests (
	Employer_ID INTEGER, 
	Software_ID TEXT, 
	Request_Start_Date TEXT, 
	Request_Close_Date TEXT, 
	Status TEXT);


1.d:



CREATE TRIGGER RequestToInstallments AFTER INSERT on Software_Requests
	BEGIN		
		
		UPDATE Services SET Number_Of_Installments = Number_Of_Installments + 1 
		WHERE Software_ID = (SELECT Software_ID FROM Software_Requests WHERE Status = &quot;pending&quot; ORDER by Request_Start_Date DESC LIMIT 1);
				
	END;
	

######TEST#######


INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;5&quot;, &quot;PANDA20&quot;, datetime(), &quot;15.07.2022 24:00:00&quot;, &quot;pending&quot;);



INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;2&quot;, &quot;AVG20&quot;, datetime(), &quot;15.07.2022 24:00:00&quot;, &quot;pending&quot;);




1.E:


	
CREATE TRIGGER InvalidRequestResponse AFTER UPDATE on Software_Requests
	BEGIN		
		
		UPDATE Services SET Number_Of_Installments = Number_Of_Installments - 1 
		WHERE Software_ID = (SELECT Software_ID FROM Software_Requests WHERE Status = &quot;invalid&quot; ORDER by Request_Close_Date DESC LIMIT 1);
				
	END;
	
SELECT Software_ID FROM Software_Requests WHERE Status = &quot;invalid&quot; ORDER by Request_Close_Date DESC LIMIT 1


	
	####TEST######
	
##PANDA20:   
UPDATE Software_Requests SET Status = &quot;invalid&quot;, Request_Close_Date = datetime() WHERE Request_Start_Date = &quot;2022-07-05 21:10:49&quot;

##AVG20:
UPDATE Software_Requests SET Status = &quot;invalid&quot;, Request_Close_Date = datetime() WHERE Request_Start_Date = &quot;2022-07-05 20:31:34&quot;





















++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
=============================================================================================
CREATE TABLE Employers (
	Employer_ID INTEGER PRIMARY KEY AUTOINCREMENT, 
	Full_Name TEXT, 
	Joining_Date TEXT, 
	Current_Position TEXT, 
	Department TEXT, 
	Assigned_Project_Client TEXT );

CREATE TRIGGER first AFTER INSERT on Employers
	BEGIN
		INSERT into Employers 
		(Full_Name,Joining_Date, Current_Position, Department, Assigned_Project_Client) 
		VALUES
		(&quot;Zeeshan trig&quot;, &quot;12-09-2020&quot;, &quot;Data analyst&quot;, &quot;MMN&quot;, &quot;A&quot;);
	END
;

drop trigger first;

	
INSERT into Employers 
(Full_Name,Joining_Date, Current_Position, Department, Assigned_Project_Client) 
VALUES
(&quot;Rasiq&quot;, &quot;12-09-2020&quot;, &quot;DAA&quot;, &quot;MMN&quot;, &quot;A&quot;)
	
	

''''''''''''''''''''''''''''''''''''''''
INSERT into Employers (Full_Name,Joining_Date, Current_Position, Department, Assigned_Project_Client) 
VALUES
(&quot;zee &quot;, &quot;12-09-2022&quot;, &quot;analyst&quot;, &quot;Mca&quot;, &quot;abc&quot;)

select * from Employers

DROP TABLE Employers;

DROP TABLE sqlite_sequence;

==============================

CREATE TABLE Services (
	Software_ID TEXT PRIMARY KEY, 
	Name TEXT, 
	Category TEXT, 
	Size INT, 
	Number_Of_Installments INTEGER AUTOINCREMENT );

Q2- we can make it sure when No od ins...............	
	
DROP TABLE Services;

INSERT INTO Services
(Software_ID, name, Category, Size, Number_Of_Installments) VALUES
(&quot;IK000&quot;, &quot;PANDA&quot;, &quot;Antivirus&quot;, &quot;2045&quot;, &quot;1&quot;);

==================
CREATE TABLE test (
	Software_ID TEXT, 
	Request_Start_Date CURRENT_DATE
	)
DROP table test;

INSERT INTO test (Software_ID)
VALUES (232)


CREATE TABLE Software_Requests (
	Employer_ID INTEGER, 
	Software_ID TEXT, 
	Request_Start_Date TEXT, 
	Request_Close_Date TEXT, 
	Status TEXT);


INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;011&quot;, &quot;PANDA20&quot;, &quot;05.07.2022 12:00:00&quot;, &quot;15.08.2022 24:00:00&quot;, &quot;penfing&quot;);

####################DATA####################

INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;1&quot;, &quot;AVG20&quot;, &quot;05.07.2022 11:00:11&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;completed&quot;);

INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;2&quot;, &quot;AVG20&quot;, &quot;04.07.2022 11:00:14&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;pending&quot;);

INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;3&quot;, &quot;AVG20&quot;, &quot;03.07.2022 14:00:17&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;completed&quot;);

INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;1&quot;, &quot;PANDA20&quot;, &quot;04.07.2022 11:00:14&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;completed&quot;);


INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;3&quot;, &quot;AVAST20&quot;, &quot;05.02.2022 11:00:12&quot;, &quot;15.04.2024 24:00:00&quot;, &quot;completed&quot;);

INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;5&quot;, &quot;AVG20&quot;, &quot;04.07.2022 01:00:59&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;pending&quot;);



######TEST#######


INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;5&quot;, &quot;PANDA20&quot;, &quot;05.07.2022 17:00:59&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;pending&quot;);



INSERT INTO Software_Requests
(Employer_ID , Software_ID , Request_Start_Date , Request_Close_Date , Status )
 VALUES
(&quot;2&quot;, &quot;AVG20&quot;, &quot;05.07.2022 18:00:01&quot;, &quot;15.07.2022 24:00:00&quot;, &quot;pending&quot;);


================================================

CREATE TRIGGER RequestToInstallments AFTER INSERT on Software_Requests
	BEGIN		
		
		UPDATE Services SET Number_Of_Installments = Number_Of_Installments + 1 
		WHERE Software_ID = (SELECT Software_ID FROM Software_Requests ORDER by Request_Start_Date DESC LIMIT 1);
				
	END;
	
	
	+++++++++++++++++++++++++++++++
	
	(Number_Of_Installments = (SELECT Number_Of_Installments FROM Services 
				join Software_Requests
				WHERE 
				Services.Software_ID = Software_Requests.Software_ID 
				AND 
				Software_Requests.Status = &quot;pending&quot;));
	datetime
	
	SELECT * FROM Software_Requests ORDER by Request_Start_Date DESC LIMIT 1;
 				
				
				
		UPDATE Services SET Number_Of_Installments = Number_Of_Installments + 1 
		WHERE (Number_Of_Installments = (SELECT Number_Of_Installments FROM Services 
				join Software_Requests
				WHERE 
				Services.Software_ID = Software_Requests.Software_ID 
				AND 
				Software_Requests.Status = &quot;pending&quot;))
				
				
				
				SELECT Number_Of_Installments FROM Services 
				join Software_Requests
				WHERE Services.Software_ID = Software_Requests.Software_ID AND Software_Requests.Status = &quot;pending&quot;
				
				
		

    
UPDATE Services SET Number_Of_Installments = Number_Of_Installments + 1 
		WHERE (SELECT Number_Of_Installments FROM Services 
				join Software_Requests
				ON Services.Software_ID = Software_Requests.Software_ID)





DROP TRIGGER RequestToInstallments;

UPDATE Services SET Number_Of_Installments = Number_Of_Installments + 1 WHERE Software_ID = 'IK202';



UPDATE Services SET Number_Of_Installments = 1 
JOIN 
Software_Requests ON Software_Requests.Software_ID = Services.Software_ID
WHERE Software_ID = 'IK202';


UPDATE Services SET Number_Of_Installments = 1 WHERE EXISTS (SELECT Number_Of_Installments FROM Software_Requests WHERE ) ;
		WHERE Services.Software_ID = Software_Requests.Software_ID;

SELECT Number_Of_Installments FROM Services 
join Software_Requests
ON Services.Software_ID = Software_Requests.Software_ID
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		</sql><current_tab id="0"/></tab_sql></sqlb_project>
